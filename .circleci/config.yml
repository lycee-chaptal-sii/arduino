version: 2
jobs:
  build:
    docker:
      - image: debian:stretch
    environment:
      - ARDMK_DIR: "/root/project/Arduino-Makefile"
      - DEBIAN_FRONTEND: "noninteractive"
      - GOROOT: "/usr/local/go"
      - GOPATH: "/root/project/go"
      - BASH_ENV: "/root/project/.bashrc"
    steps:
      - checkout
      - run:
          name: Ajout de valeur dans PATH
          command: >
              echo 'export PATH=$GOROOT/bin:$GOPATH/bin:$PATH' > $BASH_ENV
      - run:
          name: Recherche des dépendances
          command: >
              apt-get update &&
              apt-get -y install
              wget
              arduino-core
              libboost-tools-dev
              git-core
              build-essential &&
              wget https://dl.google.com/go/go1.11.2.linux-amd64.tar.gz &&
              tar -xf go1.11.2.linux-amd64.tar.gz &&
              mv go /usr/local &&
              go get -u github.com/arduino/arduino-cli

      - run:
          name: Installation des utilitaires pour Arduino M0 pro
          command: >
              arduino-cli core update-index &&
              arduino-cli core install arduino:samd

      - run:
          name: Récupération du générateur de Makefile
          command: >
              git clone https://github.com/sudar/Arduino-Makefile.git

      - run:
          name: Génération du Makefile
          command: >
              echo -e "
              CFLAGS_STD = -std=c99\n
              BOARD_TAG = mzero_pro_bl_dbg\n
              ARDUINO_PORT = /dev/cu.usb*\n
              include /root/project/Arduino-Makefile/Sam.mk\n
              " > Makefile

      - run:
          name: Rappatriement des fichiers source
          command: >
              if [ -d "src" ]; then
              sed -i.bak 's+../include+include+g' src/*.cpp &&
              mv src/*.cpp .;
              fi

      - run:
          name: Compilation du code Arduino
          command: make

      - run:
          name: Inspection du code Arduino
          command: >
            mkdir inspect_dir &&
            cp
            `find ./ -path ./Arduino-Makefile -prune -o -name '*.ino' -print`
            `find ./ -path ./Arduino-Makefile -prune -o -name '*.cpp' -print`
            `find ./ -path ./Arduino-Makefile -prune -o -name '*.hpp' -print`
            inspect_dir/. &&
            inspect inspect_dir
            -copyright -crlf -end -link -path_name -tab -ascii -apple_macro
            -assert_macro -deprecated_macro -minmax -unnamed
            > inspect_report.html

      - store_artifacts:
          path: inspect_report.html
          destination: artefact
